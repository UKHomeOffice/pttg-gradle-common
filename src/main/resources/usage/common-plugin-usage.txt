
You can override versions of common dependency libraries using the following technique:

    def versionOverrides = [
        "org.springframework.boot": "1.3.5.RELEASE"
    ]

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->

            def overrideVersion = versionOverrides[details.requested.group]

            if (overrideVersion != null && details.requested.version != overrideVersion) {
               details.useVersion overrideVersion
            }
        }
    }

The following sections list configuration that this plugin applies to your project

Plugins:
    Java
    Groovy
    Application
    Checkstyle
    Git Properties

Repositories:
    jcenter
    mavenCentral
    mavenLocal

Java version
   1.8

Gradle Wrapper
    version :2.13
    note: run the gradleWrapper task to configure your project

Property Expansion
    Properties in build.gradle can be referenced with placeholders in application.properties eg ${version}

Test reports
    Test reports for Test tasks will appear in their own directory following the task name
    eg reports/acceptanceTest for the acceptanceTest task

Gulp plugin configuration
    If the gulp plugin is present, the gulp_test task will be added to the build task, and
    a gulpTest task will be added to the verification group

Checkstyle
    Checkstyle is added with a check for unused imports
    You can apply
        checkstyle {
            ignoreFailures = true
        }
    to fail the build when violations occur

    You can also point to your own checkstyle config file using
        checkstyle {
            configFile = <path-to-checkstyle.xml>
        }

See full details in the plugin readme in github at https://github.com/UKHomeOffice/pttg-gradle-common


************************************ END OF USAGE REPORT ********************************************
